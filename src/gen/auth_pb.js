// source: auth.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.userAuth.FirebaseProperty', null, global);
goog.exportSymbol('proto.userAuth.ReqSubscribe', null, global);
goog.exportSymbol('proto.userAuth.ReqVerifikasiToken', null, global);
goog.exportSymbol('proto.userAuth.ResVerifikasiToken', null, global);
goog.exportSymbol('proto.userAuth.UserRoles', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.userAuth.ReqSubscribe = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.userAuth.ReqSubscribe, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.userAuth.ReqSubscribe.displayName = 'proto.userAuth.ReqSubscribe';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.userAuth.ReqVerifikasiToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.userAuth.ReqVerifikasiToken.repeatedFields_, null);
};
goog.inherits(proto.userAuth.ReqVerifikasiToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.userAuth.ReqVerifikasiToken.displayName = 'proto.userAuth.ReqVerifikasiToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.userAuth.FirebaseProperty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.userAuth.FirebaseProperty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.userAuth.FirebaseProperty.displayName = 'proto.userAuth.FirebaseProperty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.userAuth.ResVerifikasiToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.userAuth.ResVerifikasiToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.userAuth.ResVerifikasiToken.displayName = 'proto.userAuth.ResVerifikasiToken';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.userAuth.ReqSubscribe.prototype.toObject = function(opt_includeInstance) {
  return proto.userAuth.ReqSubscribe.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.userAuth.ReqSubscribe} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.userAuth.ReqSubscribe.toObject = function(includeInstance, msg) {
  var f, obj = {
    fcmtoken: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.userAuth.ReqSubscribe}
 */
proto.userAuth.ReqSubscribe.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.userAuth.ReqSubscribe;
  return proto.userAuth.ReqSubscribe.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.userAuth.ReqSubscribe} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.userAuth.ReqSubscribe}
 */
proto.userAuth.ReqSubscribe.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFcmtoken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.userAuth.ReqSubscribe.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.userAuth.ReqSubscribe.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.userAuth.ReqSubscribe} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.userAuth.ReqSubscribe.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFcmtoken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string fcmToken = 1;
 * @return {string}
 */
proto.userAuth.ReqSubscribe.prototype.getFcmtoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.userAuth.ReqSubscribe} returns this
 */
proto.userAuth.ReqSubscribe.prototype.setFcmtoken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.userAuth.ReqVerifikasiToken.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.userAuth.ReqVerifikasiToken.prototype.toObject = function(opt_includeInstance) {
  return proto.userAuth.ReqVerifikasiToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.userAuth.ReqVerifikasiToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.userAuth.ReqVerifikasiToken.toObject = function(includeInstance, msg) {
  var f, obj = {
    rolesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.userAuth.ReqVerifikasiToken}
 */
proto.userAuth.ReqVerifikasiToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.userAuth.ReqVerifikasiToken;
  return proto.userAuth.ReqVerifikasiToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.userAuth.ReqVerifikasiToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.userAuth.ReqVerifikasiToken}
 */
proto.userAuth.ReqVerifikasiToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setRolesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.userAuth.ReqVerifikasiToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.userAuth.ReqVerifikasiToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.userAuth.ReqVerifikasiToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.userAuth.ReqVerifikasiToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
};


/**
 * repeated int32 roles = 1;
 * @return {!Array<number>}
 */
proto.userAuth.ReqVerifikasiToken.prototype.getRolesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.userAuth.ReqVerifikasiToken} returns this
 */
proto.userAuth.ReqVerifikasiToken.prototype.setRolesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.userAuth.ReqVerifikasiToken} returns this
 */
proto.userAuth.ReqVerifikasiToken.prototype.addRoles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.userAuth.ReqVerifikasiToken} returns this
 */
proto.userAuth.ReqVerifikasiToken.prototype.clearRolesList = function() {
  return this.setRolesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.userAuth.FirebaseProperty.prototype.toObject = function(opt_includeInstance) {
  return proto.userAuth.FirebaseProperty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.userAuth.FirebaseProperty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.userAuth.FirebaseProperty.toObject = function(includeInstance, msg) {
  var f, obj = {
    identitiesMap: (f = msg.getIdentitiesMap()) ? f.toObject(includeInstance, proto.google.protobuf.Any.toObject) : [],
    signinprovider: jspb.Message.getFieldWithDefault(msg, 2, ""),
    signinsecondfactor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    secondfactoridentifier: jspb.Message.getFieldWithDefault(msg, 4, ""),
    tenant: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.userAuth.FirebaseProperty}
 */
proto.userAuth.FirebaseProperty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.userAuth.FirebaseProperty;
  return proto.userAuth.FirebaseProperty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.userAuth.FirebaseProperty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.userAuth.FirebaseProperty}
 */
proto.userAuth.FirebaseProperty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getIdentitiesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Any.deserializeBinaryFromReader, "", new proto.google.protobuf.Any());
         });
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSigninprovider(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSigninsecondfactor(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecondfactoridentifier(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTenant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.userAuth.FirebaseProperty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.userAuth.FirebaseProperty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.userAuth.FirebaseProperty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.userAuth.FirebaseProperty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentitiesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Any.serializeBinaryToWriter);
  }
  f = message.getSigninprovider();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSigninsecondfactor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSecondfactoridentifier();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTenant();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * map<string, google.protobuf.Any> identities = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Any>}
 */
proto.userAuth.FirebaseProperty.prototype.getIdentitiesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Any>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.google.protobuf.Any));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.userAuth.FirebaseProperty} returns this
 */
proto.userAuth.FirebaseProperty.prototype.clearIdentitiesMap = function() {
  this.getIdentitiesMap().clear();
  return this;};


/**
 * optional string signInProvider = 2;
 * @return {string}
 */
proto.userAuth.FirebaseProperty.prototype.getSigninprovider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.userAuth.FirebaseProperty} returns this
 */
proto.userAuth.FirebaseProperty.prototype.setSigninprovider = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string signInSecondFactor = 3;
 * @return {string}
 */
proto.userAuth.FirebaseProperty.prototype.getSigninsecondfactor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.userAuth.FirebaseProperty} returns this
 */
proto.userAuth.FirebaseProperty.prototype.setSigninsecondfactor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string secondFactorIdentifier = 4;
 * @return {string}
 */
proto.userAuth.FirebaseProperty.prototype.getSecondfactoridentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.userAuth.FirebaseProperty} returns this
 */
proto.userAuth.FirebaseProperty.prototype.setSecondfactoridentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string tenant = 5;
 * @return {string}
 */
proto.userAuth.FirebaseProperty.prototype.getTenant = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.userAuth.FirebaseProperty} returns this
 */
proto.userAuth.FirebaseProperty.prototype.setTenant = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.userAuth.ResVerifikasiToken.prototype.toObject = function(opt_includeInstance) {
  return proto.userAuth.ResVerifikasiToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.userAuth.ResVerifikasiToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.userAuth.ResVerifikasiToken.toObject = function(includeInstance, msg) {
  var f, obj = {
    aud: jspb.Message.getFieldWithDefault(msg, 1, ""),
    authtime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    email: jspb.Message.getFieldWithDefault(msg, 3, ""),
    emailverified: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    exp: jspb.Message.getFieldWithDefault(msg, 5, 0),
    firebase: (f = msg.getFirebase()) && proto.userAuth.FirebaseProperty.toObject(includeInstance, f),
    iat: jspb.Message.getFieldWithDefault(msg, 7, 0),
    iss: jspb.Message.getFieldWithDefault(msg, 8, ""),
    phonenumber: jspb.Message.getFieldWithDefault(msg, 9, ""),
    picture: jspb.Message.getFieldWithDefault(msg, 10, ""),
    sub: jspb.Message.getFieldWithDefault(msg, 11, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 13, ""),
    roles: jspb.Message.getFieldWithDefault(msg, 14, 0),
    parent: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.userAuth.ResVerifikasiToken}
 */
proto.userAuth.ResVerifikasiToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.userAuth.ResVerifikasiToken;
  return proto.userAuth.ResVerifikasiToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.userAuth.ResVerifikasiToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.userAuth.ResVerifikasiToken}
 */
proto.userAuth.ResVerifikasiToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAud(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAuthtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailverified(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExp(value);
      break;
    case 6:
      var value = new proto.userAuth.FirebaseProperty;
      reader.readMessage(value,proto.userAuth.FirebaseProperty.deserializeBinaryFromReader);
      msg.setFirebase(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIat(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setIss(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhonenumber(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPicture(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSub(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 14:
      var value = /** @type {!proto.userAuth.UserRoles} */ (reader.readEnum());
      msg.setRoles(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.userAuth.ResVerifikasiToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.userAuth.ResVerifikasiToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.userAuth.ResVerifikasiToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.userAuth.ResVerifikasiToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAud();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAuthtime();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmailverified();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getExp();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getFirebase();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.userAuth.FirebaseProperty.serializeBinaryToWriter
    );
  }
  f = message.getIat();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getIss();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPhonenumber();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPicture();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSub();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getRoles();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * optional string aud = 1;
 * @return {string}
 */
proto.userAuth.ResVerifikasiToken.prototype.getAud = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.userAuth.ResVerifikasiToken} returns this
 */
proto.userAuth.ResVerifikasiToken.prototype.setAud = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 authTime = 2;
 * @return {number}
 */
proto.userAuth.ResVerifikasiToken.prototype.getAuthtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.userAuth.ResVerifikasiToken} returns this
 */
proto.userAuth.ResVerifikasiToken.prototype.setAuthtime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string email = 3;
 * @return {string}
 */
proto.userAuth.ResVerifikasiToken.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.userAuth.ResVerifikasiToken} returns this
 */
proto.userAuth.ResVerifikasiToken.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool emailVerified = 4;
 * @return {boolean}
 */
proto.userAuth.ResVerifikasiToken.prototype.getEmailverified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.userAuth.ResVerifikasiToken} returns this
 */
proto.userAuth.ResVerifikasiToken.prototype.setEmailverified = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int32 exp = 5;
 * @return {number}
 */
proto.userAuth.ResVerifikasiToken.prototype.getExp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.userAuth.ResVerifikasiToken} returns this
 */
proto.userAuth.ResVerifikasiToken.prototype.setExp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional FirebaseProperty firebase = 6;
 * @return {?proto.userAuth.FirebaseProperty}
 */
proto.userAuth.ResVerifikasiToken.prototype.getFirebase = function() {
  return /** @type{?proto.userAuth.FirebaseProperty} */ (
    jspb.Message.getWrapperField(this, proto.userAuth.FirebaseProperty, 6));
};


/**
 * @param {?proto.userAuth.FirebaseProperty|undefined} value
 * @return {!proto.userAuth.ResVerifikasiToken} returns this
*/
proto.userAuth.ResVerifikasiToken.prototype.setFirebase = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.userAuth.ResVerifikasiToken} returns this
 */
proto.userAuth.ResVerifikasiToken.prototype.clearFirebase = function() {
  return this.setFirebase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.userAuth.ResVerifikasiToken.prototype.hasFirebase = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 iat = 7;
 * @return {number}
 */
proto.userAuth.ResVerifikasiToken.prototype.getIat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.userAuth.ResVerifikasiToken} returns this
 */
proto.userAuth.ResVerifikasiToken.prototype.setIat = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string iss = 8;
 * @return {string}
 */
proto.userAuth.ResVerifikasiToken.prototype.getIss = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.userAuth.ResVerifikasiToken} returns this
 */
proto.userAuth.ResVerifikasiToken.prototype.setIss = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string phoneNumber = 9;
 * @return {string}
 */
proto.userAuth.ResVerifikasiToken.prototype.getPhonenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.userAuth.ResVerifikasiToken} returns this
 */
proto.userAuth.ResVerifikasiToken.prototype.setPhonenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string picture = 10;
 * @return {string}
 */
proto.userAuth.ResVerifikasiToken.prototype.getPicture = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.userAuth.ResVerifikasiToken} returns this
 */
proto.userAuth.ResVerifikasiToken.prototype.setPicture = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string sub = 11;
 * @return {string}
 */
proto.userAuth.ResVerifikasiToken.prototype.getSub = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.userAuth.ResVerifikasiToken} returns this
 */
proto.userAuth.ResVerifikasiToken.prototype.setSub = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string uid = 13;
 * @return {string}
 */
proto.userAuth.ResVerifikasiToken.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.userAuth.ResVerifikasiToken} returns this
 */
proto.userAuth.ResVerifikasiToken.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional UserRoles roles = 14;
 * @return {!proto.userAuth.UserRoles}
 */
proto.userAuth.ResVerifikasiToken.prototype.getRoles = function() {
  return /** @type {!proto.userAuth.UserRoles} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.userAuth.UserRoles} value
 * @return {!proto.userAuth.ResVerifikasiToken} returns this
 */
proto.userAuth.ResVerifikasiToken.prototype.setRoles = function(value) {
  return jspb.Message.setProto3EnumField(this, 14, value);
};


/**
 * optional string parent = 15;
 * @return {string}
 */
proto.userAuth.ResVerifikasiToken.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.userAuth.ResVerifikasiToken} returns this
 */
proto.userAuth.ResVerifikasiToken.prototype.setParent = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * @enum {number}
 */
proto.userAuth.UserRoles = {
  ADMIN: 0,
  POLISI: 1,
  MASYARAKAT: 2
};

goog.object.extend(exports, proto.userAuth);
